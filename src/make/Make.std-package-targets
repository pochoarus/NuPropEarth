
LIB_PATH = $(NUPROPEARTH)/lib

PACKAGE_LIB_WITH_PATH         = $(LIB_PATH)/$(LIBNAME).$(DllSuf)
PACKAGE_ALL_SOURCES          := $(wildcard *.cxx)
DICTGEN_HEADERS              := $(addsuffix .h, $(basename $(PACKAGE_ALL_SOURCES)))
DICTGEN_OBJECTS              := $(addsuffix .$(ObjSuf), $(basename $(DICTGEN_HEADERS)))
PACKAGE_ALL_SOURCES          := $(PACKAGE_ALL_SOURCES) $(DICTIONARY).cc $(wildcard *.cpp)
PACKAGE_ALL_OBJECTS           = $(addsuffix .$(ObjSuf), $(basename $(PACKAGE_ALL_SOURCES)))
PACKAGE_SOURCES              := $(wildcard *.cxx)
PACKAGE_OBJECTS               = $(addsuffix .$(ObjSuf), $(basename $(PACKAGE_SOURCES)))
LIB_DEPEND=
ifeq ($(strip $(DICTIONARY)),undefined)
  LIB_DEPEND = $(PACKAGE_OBJECTS) 
else
  LIB_DEPEND = $(PACKAGE_ALL_OBJECTS)
endif

#
#
rootcint: $(DICTIONARY).o
$(DICTIONARY).cc: LinkDef.h $(DICTGEN_OBJECTS)
	$(RM) $(DICTIONARY).*
	@echo "[package: $(PACKAGE)] Generating ROOT dictionary ..."
	rootcint -f $(DICTIONARY).cc -c -p $(ROOT_DICT_GEN_INCLUDES) $(DICTGEN_HEADERS) LinkDef.h
	[ ! -f $(DICTIONARY)_rdict.pcm ] || $(COPY) $(DICTIONARY)_rdict.pcm $(LIB_PATH)

#
#
lib: $(LIB_DEPEND)
	@echo "[package: $(PACKAGE)] Generating shared library ..."
ifeq ($(strip $(DICTIONARY)),undefined)
	$(SOCMD) $(SOFLAGS) $(SOMINF) $(PACKAGE_OBJECTS) $(OutPutOpt) $(PACKAGE_LIB_WITH_PATH)
else
	$(SOCMD) $(SOFLAGS) $(SOMINF) $(PACKAGE_ALL_OBJECTS) $(OutPutOpt) $(PACKAGE_LIB_WITH_PATH)
endif

#
#
.PHONY: purge
purge: 
	$(RM) $(PACKAGE_OBJECTS) *~ core a.out Makefile.temp

#
#
.PHONY: clean
clean:   
	@echo "Clean in $(PACKAGE)"
	$(RM) -f *.rootmap *.rootmap.bak *.pcm *.d *.o *.cc *~ core a.out Makefile.temp
